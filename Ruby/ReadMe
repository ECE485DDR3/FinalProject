Just wanted to share this file with you guys.

Adrian, can you take a look at this code. I find it easier to work with then C. 
Two files.
1) ParseCpuRequests.rb does three things
reads external final into array
parses each instruction into row,bank,col,instruction,cpu time
simulates the memory controller where 
buffer can only take 16 instructions at a time and all instructions take 200 cpu cycles for now. 
it displays current cpu cycle count, buffer size, last entry to the buffer, and DRAM cycle count

you can set up your environment here. btw, macs already come with Ruby installed i believe.
http://www.tutorialspoint.com/ruby/ruby_environment.htm

after setting up the environment in your terminal go to the home dir of the where you copy them type:
>ruby ParseCpuRequests.rb

current syntax is 
>ruby MemControllerFRA.rb testcase0.txt

the output file which will have the dram commands associated with the input file requests will be named
the same as the input file but with Log appended to the end of the name.
e.g. input file: [input.txt]
     output file: [inputLog.txt]

to run in debug mode
>ruby MemControllerFRA.rb testcase0.txt -d

since debug mode generates lots of output, most likely need to pipe the output to a file
>ruby MemControllerFRA.rb testcase0.txt -d > output.txt

debug mode will generate a more informational log file, as well as print useful information to the screen
